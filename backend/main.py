from fastapi import FastAPI, File, UploadFile, Form
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import StreamingResponse, JSONResponse
from aiogram.types import InputFile
import io
from io import BytesIO
from PIL import Image
from u2net_utils import load_model, remove_background
from aiogram import Bot
import os

app = FastAPI()

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7932051624:AAFdRF9vgQ044ps1GgpBAf5mSZ1xNu9B4Zg"
bot = Bot(BOT_TOKEN)

# –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ngrok –∏–ª–∏ cloudflare
origins = [
    "http://localhost:5500",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –õ—É—á—à–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ URL
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

model = load_model()


@app.post("/remove_bg")
async def remove_bg(image: UploadFile = File(...)):
    contents = await image.read()
    pil_image = Image.open(BytesIO(contents))
    result = remove_background(model, pil_image)

    buffer = BytesIO()
    result.save(buffer, format="PNG")
    buffer.seek(0)
    return StreamingResponse(buffer, media_type="image/png")


@app.post("/send_to_chat")
async def send_to_chat(
    chat_id: str = Form(...),
    image: UploadFile = File(...)
):
    # –ø–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    filename = image.filename  
    print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å send_to_chat:")
    print(f"chat_id = {chat_id}")
    print(f"image filename = {image.filename}")

    """
    –≠—Ç–æ—Ç endpoint –ø—Ä–∏–Ω–∏–º–∞–µ—Ç chat_id –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤ —á–∞—Ç.
    """
    image_bytes = await image.read()
    print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ = {len(image_bytes)} –±–∞–π—Ç")
    from aiogram.types import BufferedInputFile

    buffer = io.BytesIO(image_bytes)
    input_file = BufferedInputFile(file=buffer.getvalue(), filename=filename) # –ò–º—è —Ñ–∞–π–ª–∞, –º–æ–∂–Ω–æ –ª—é–±–æ–µ


    await bot.send_document(chat_id=chat_id, document=input_file, caption="–í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ–Ω–∞ üåü"
)

    return JSONResponse({"status": "ok"})


# –ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Ä—É—á–Ω–æ–º —Å—Ç–∞—Ä—Ç–µ
if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="127.0.0.1", port=8000, reload=True)
